spring:
  profiles:
    active: dev  # Default: H2; schimbă la prod pentru Postgres

grok:
  api:
    url: https://api.x.ai/v1/chat/completions  # Endpoint standard; confirmă în docs xAI API
    key: dummy-key  # Placeholder; nu e folosit acum, dar previne erori
---
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:h2:mem:ortodoxmd_db;DB_CLOSE_DELAY=-1  # In-memory pentru dev rapid
    username: sa
    password: 
    driver-class-name: org.h2.Driver
  jpa:
    hibernate:
      ddl-auto: create-drop  # Recrează la fiecare run în dev (compatibil Flyway)
    show-sql: true
  flyway:
    enabled: true  # Activează Flyway
    locations: classpath:db/migration  # Locație standard pentru script-uri
    baseline-on-migrate: true  # Dacă DB existent, baseline la V1
    schemas: core_schema  # Schema țintă (compatibil H2/Postgres)
  h2:
    console:
      enabled: true
      path: /h2-console

---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: jdbc:postgresql://localhost:5432/ortodoxmd_db
    username: postgres
    password: yourpassword
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate  # Validează schema în prod (nu modifică)
    show-sql: true
  flyway:
    enabled: true  # Activează Flyway
    locations: classpath:db/migration
    baseline-on-migrate: true
    schemas: core_schema  # Asigură migrări în schema corectă

